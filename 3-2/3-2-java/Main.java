/*
 * Program to calculate factorials using recursion.
 * @author Jakub Malhotra
 * @version 1.0
 * @since   2024-11-20
 */

/**
 * Recursively performs factorial calculations.
 */
public final class Main {

    /**
     * Private constructor to prevent instantiation.
     * This class should not be instantiated.
     */
    private Main() {
        // Prevent instantiation
    }

    /**
     * Method to calculate the factorial of a given number recursively.
     *
     * @param numberToFactorial The number to calculate the factorial of.
     * @return The factorial of the number, or -1 for invalid input.
     */
    public static int calculateFactorial(final int numberToFactorial) {
        // Return -1 for error cases
        if (numberToFactorial < 0) {
            return -1;
        }
        if (numberToFactorial == 0 || numberToFactorial == 1) {
            return 1; // Base case
        }
        // Recursively calculate factorial
        return calculateFactorial(numberToFactorial - 1) * numberToFactorial;
    }

    /**
     * Main method to run the program.
     *
     * @param args Command-line arguments (not used).
     */
    public static void main(final String[] args) {
        // Create a scanner to take user input
        java.util.Scanner scanner = new java.util.Scanner(System.in);

        System.out.print("Enter a positive integer: ");
        // Check if input is valid
        //boolean expression for if the next item in the scanner is an int
        // generated by Github Copilot
        if (!scanner.hasNextInt()) {
            System.out.println("Invalid input");
        } else {
            int userInput = scanner.nextInt();
            int theProduct = calculateFactorial(userInput);

            if (theProduct == -1) {
                System.out.println("Invalid input");
            } else {
                System.out.println(userInput + "! = " + theProduct);
            }
        }

        System.out.println("\nDone.");
        scanner.close();
    }
}
